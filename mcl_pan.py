# -*- coding: utf-8 -*-
"""mcl-pan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JtxMkiEgQbyZVNVdjc8v3vR_KZsfaqaA
"""

# installing the libraries required
# colab supports pip. but it may not run in your system
# you have to install these libraries in your system, else the code will not work

# we are converting each page of the scanned pdf into an image (jpeg or png) using pdf2img()
# then extracting the text from each image using extract_text()
# then, we are finding the pan number by checking for the format using getPAN()


import fitz # PyMuPDF
import io
from PIL import Image

def pdf2img(filepath):  
  # ocr cannot work on pdf format. so converting it to a suitable image format
    pdf_file = fitz.open(filepath)
    filename = filepath.split("/")[-1].split(".")[0]
    images_extracted = []
    # iterate over PDF pages
    for page_index in range(len(pdf_file)):
        # get the page itself
        page = pdf_file[page_index]
        image_list = page.get_images()
        # printing number of images found in this page
        if image_list:
            print(f"[+] Found a total of {len(image_list)} images in page {page_index}")
        else:
            print("[!] No images found on page", page_index)
        for image_index, img in enumerate(page.get_images(), start=1):
            # get the XREF of the image
            xref = img[0]
            # extract the image bytes
            base_image = pdf_file.extract_image(xref)
            image_bytes = base_image["image"]
            # get the image extension
            image_ext = base_image["ext"]
            # load it to PIL
            image = Image.open(io.BytesIO(image_bytes))
            # save it to local disk
            image_name = f"{filename}P{page_index}I{image_index}.{image_ext}"
            image.save(open(image_name, "wb"))
            images_extracted.append(image_name)
    return images_extracted

import easyocr  # for optical character recognition
def extract_text(imagepath):
  reader = easyocr.Reader(['en'], gpu=True)
  text_extracted = reader.readtext(imagepath, paragraph="False")
  result = []
  for txt in text_extracted:
    result.append(txt[-1])
  return result

import os
import re

def getPAN(imagepath):
  potential_changes = {"S": "5",
                     "I": "1",
                     "O": "0",
                     "Z": "2",
                     "B": "8",
                     "T": "7",
                     "A": "4",
                     "l": "1"}
  images = pdf2img(imagepath)
  pan = []
  for img in images:
    text = extract_text(img)
    for txt in text:
      for t in txt.split():
        if len(t) == 10:
          pan.append(t)

  for img in images:
    os.remove(img)
  pan_changed = []
  for p in pan:
    dig = p[-5: -1]
    dig_changed = ""
    for d in dig:
      if d.isalpha() and d in potential_changes.keys():
        dig_changed += potential_changes[d]  # compensating for bad image quality that causes poor character recognition
        # this still does not eliminate the whole problem... it still may not work in some cases
      else:
        dig_changed += d
    pan_changed.append(p[: -5] + dig_changed + p[-1])
  pan = set()
  for p in pan_changed:
    t = re.findall(r"[A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][A-Z]", p)  # regular expression for PAN number verification
    if len(t) != 0:
      pan.add(t[0])
  return pan

